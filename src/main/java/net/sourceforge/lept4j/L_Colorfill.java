package net.sourceforge.lept4j;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * Colorfill data<br>
 * <i>native declaration : colorfill.h:15</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class L_Colorfill extends Structure {
	/**
	 * clone of source pix<br>
	 * C type : Pix*
	 */
	public net.sourceforge.lept4j.Pix.ByReference pixs;
	/**
	 * source pix, after optional transform<br>
	 * C type : Pix*
	 */
	public net.sourceforge.lept4j.Pix.ByReference pixst;
	/**
	 * number of tiles in each tile row<br>
	 * C type : l_int32
	 */
	public int nx;
	/**
	 * number of tiles in each tile column<br>
	 * C type : l_int32
	 */
	public int ny;
	/**
	 * width of each tile<br>
	 * C type : l_int32
	 */
	public int tw;
	/**
	 * height of each tile<br>
	 * C type : l_int32
	 */
	public int th;
	/**
	 * min number of pixels in a color region<br>
	 * C type : l_int32
	 */
	public int minarea;
	/**
	 * tile locations<br>
	 * C type : Boxa*
	 */
	public net.sourceforge.lept4j.Boxa.ByReference boxas;
	/**
	 * tiles from source pix<br>
	 * C type : Pixa*
	 */
	public net.sourceforge.lept4j.Pixa.ByReference pixas;
	/**
	 * mask tiles with components covering<br>
	 * C type : Pixa*
	 */
	public net.sourceforge.lept4j.Pixa.ByReference pixam;
	/**
	 * sizes of color regions (in pixels)<br>
	 * C type : Numaa*
	 */
	public net.sourceforge.lept4j.Numaa.ByReference naa;
	/**
	 * average color in each region<br>
	 * C type : L_Dnaa*
	 */
	public net.sourceforge.lept4j.L_Dnaa.ByReference dnaa;
	/**
	 * debug reconstruction from segmentation<br>
	 * C type : Pixa*
	 */
	public net.sourceforge.lept4j.Pixa.ByReference pixadb;
	public L_Colorfill() {
		super();
	}
        @Override
	protected List<String> getFieldOrder() {
		return Arrays.asList("pixs", "pixst", "nx", "ny", "tw", "th", "minarea", "boxas", "pixas", "pixam", "naa", "dnaa", "pixadb");
	}
	public L_Colorfill(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends L_Colorfill implements Structure.ByReference {
		
	};
	public static class ByValue extends L_Colorfill implements Structure.ByValue {
		
	};
}
